name: Rust for Xous

on: [push]

jobs:
  build-libstd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        submodules: true

      - name: Determine Rust version
        shell: bash
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/} | cut -d- -f1)"
        id: extract_rust_version

      - name: Install Rust toolchain v${{ steps.extract_rust_version.outputs.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.extract_rust_version.outputs.version }}
          default: true
          override: true
          target: riscv32imac-unknown-none-elf

      - name: Install riscv32imac-unknown-xous-elf toolchain file
        run: |
          mkdir -p $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf/lib \
          && cp riscv32imac-unknown-xous-elf.json $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf

      - name: Build libstd
        run: |
          cargo build \
            --target riscv32imac-unknown-xous-elf \
            -Zbinary-dep-depinfo \
            --release \
            --features "panic-unwind compiler-builtins-c compiler-builtins-mem" \
            --manifest-path "library/test/Cargo.toml" \
          && cp target/riscv32imac-unknown-xous-elf/release/deps/*.rlib $(rustc --print sysroot)/lib/rustlib/riscv32imac-unknown-xous-elf/lib \
          && (dest=$(pwd) && cd $(rustc --print sysroot) && zip -r ${dest}/riscv32imac-unknown-xous_${{ steps.extract_rust_version.outputs.version }}.zip lib/rustlib/riscv32imac-unknown-xous-elf/)
        env:
          CARGO_PROFILE_RELEASE_DEBUG: 0
          CARGO_PROFILE_RELEASE_DEBUG_ASSERTIONS: true
          RUSTC_BOOTSTRAP: 1
          RUSTFLAGS: -Cforce-unwind-tables=yes -Cembed-bitcode=yes
          __CARGO_DEFAULT_LIB_METADATA: stablestd

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            riscv32imac-unknown-xous_${{ steps.extract_rust_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}